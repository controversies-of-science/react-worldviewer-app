.Model .Feedcard {
	background: #E57373;

	&::before {
		background: -moz-linear-gradient(top, rgba(229,115,115,0) 75%, rgba(229,115,115,1) 100%); /* FF3.6-15 */
		background: -webkit-linear-gradient(top, rgba(229,115,115,0) 75%,rgba(229,115,115,1) 100%); /* Chrome10-25,Safari5.1-6 */
		background: linear-gradient(to bottom, rgba(229,115,115,0) 75%,rgba(229,115,115,1) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
	}

	.info .breadcrumbs {
		color: rgba(255, 255, 255, 0.25);
	}

	.info .role {
		color: rgba(255, 255, 255, 0.25);
	}
}

.Propositional .Feedcard {
	background: #42A5F5;

	&::before {
		background: -moz-linear-gradient(top, rgba(66,165,245,0) 75%, rgba(66,165,245,1) 100%); /* FF3.6-15 */
		background: -webkit-linear-gradient(top, rgba(66,165,245,0) 75%,rgba(66,165,245,1) 100%); /* Chrome10-25,Safari5.1-6 */
		background: linear-gradient(to bottom, rgba(66,165,245,0) 75%,rgba(66,165,245,1) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
	}

	.info .breadcrumbs {
		color: rgba(255, 255, 255, 0.25);
	}

	.info .role {
		color: rgba(255, 255, 255, 0.25);
	}
}

.Conceptual .Feedcard {
	background: #7CB342;

	&::before {
		background: -moz-linear-gradient(top, rgba(124,179,66,0) 75%, rgba(124,179,66,1) 100%); /* FF3.6-15 */
		background: -webkit-linear-gradient(top, rgba(124,179,66,0) 75%,rgba(124,179,66,1) 100%); /* Chrome10-25,Safari5.1-6 */
		background: linear-gradient(to bottom, rgba(124,179,66,0) 75%,rgba(124,179,66,1) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
	}

	.info .breadcrumbs {
		color: rgba(255, 255, 255, 0.25);
	}

	.info .role {
		color: rgba(255, 255, 255, 0.25);
	}
}

.Narrative .Feedcard {
	background: #26A69A;

	&::before {
		background: -moz-linear-gradient(top, rgba(38,166,154,0) 75%, rgba(38,166,154,1) 100%); /* FF3.6-15 */
		background: -webkit-linear-gradient(top, rgba(38,166,154,0) 75%,rgba(38,166,154,1) 100%); /* Chrome10-25,Safari5.1-6 */
		background: linear-gradient(to bottom, rgba(38,166,154,0) 75%,rgba(38,166,154,1) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
	}

	.info .breadcrumbs {
		color: rgba(255, 255, 255, 0.25);
	}

	.info .role {
		color: rgba(255, 255, 255, 0.25);
	}
}

.Feedcard {
	height: 100%;
	overflow-y: hidden;
	position: relative;

	&::before {
		content: "";
		display: block;
		height: 100%;
		left: 0;
		pointer-events: none;
		position: absolute;
		top: 0;
		width: 100%;
	}

	.image {
		background-image: url(http://ichef.bbci.co.uk/universe/img/ic/640/questions_and_ideas/dark_matter/dark_matter_large.jpg);
		background-size: cover;
		border-radius: 0;
		font-weight: 900;
		height: 50vh;
		position: relative;
		transition: height 1s;
		width: 100vw;

		// Refactor as SCSS mix-in?
	    .share {
	    	-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
			border-style: solid;
			border-width: 1px;
			cursor: pointer;
			height: 36px;
			left: 30px;
			padding: 3px;
			top: 30px;
			transition: background-color 1s, border-color 1s, opacity 1s;
			width: 36px;

			&:hover {
				opacity: 0;
				background-color: rgba(255, 255, 255, 0.5) !important;
			}
	    }
	}

    // React is not so great when it comes to altering the fill state, so
    // what I am doing here is stacking two components so that the bottom
    // one shows when the top one fades out, on hover.  I do this for both
    // .share and .updown UI elements.
	.normal {
		background-color: #1D1D1D;
		position: relative;
		z-index: 10;
	}

	.hover {
		background-color: #839BA1;
		border-color: rgba(255, 255, 255, 0.5);
		position: absolute;
		z-index: 9;
	}

	.info, .author, .breadcrumbs, .ratings, .content {	
		padding-left: 30px;
		padding-right: 30px;
	}

	.info {
		overflow-y: auto;

		.updown {
	    	-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
			border-style: solid;
			border-width: 1px;
			cursor: pointer;
			height: 24px;
			position: absolute;
			top: 48.8vh;
			right: 30px;
	    	transform: scaleY(-1);
			transition: background-color 1s, border-color 1s, opacity 1s;
			width: 24px;

			&:hover {
				opacity: 0;
				background-color: rgba(255, 255, 255, 0.5) !important;
			}
		}

		.title {
			color: white;
			font-size: 1.5em;
			margin-top: 30px;
			pointer-events: none;
		}
	}

	.ratings {
		margin-left: -4px;
		pointer-events: none;
	}

	.breadcrumbs {
		font-size: 0.7em;
		padding-top: 10px;
		padding-bottom: 30px;
		pointer-events: none;
		text-transform: uppercase;
	}

	.author {
		margin-top: 30px;
		pointer-events: none;
		position: relative;

		.avatar {
			display: inline-block;
			pointer-events: none;
		}

		.author-info {
			display: inline-block;
			margin-left: 15px;
			pointer-events: none;
			position: absolute;
			top: 1vw;
		}

		.name {
			font-size: 1.0em;
			pointer-events: none;
		}

		.role {
			font-size: 0.7em;
			pointer-events: none;
			text-transform: uppercase;
		}
	}

	.content {
		padding-top: 30px;
		pointer-events: none;
	}
}
